local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")

local localPlayer = Players.LocalPlayer

-- ✅ Animation IDs
local animationIds = {
	["126830014841198"] = true,
	["126355327951215"] = true,
	["121086746534252"] = true,
	["18885909645"]     = true,
	["98456918873918"]  = true,
	["105458270463374"] = true,
	["83829782357897"]  = true,
	["125403313786645"] = true,
	["118298475669935"] = true,
	["82113744478546"]  = true,
	["70371667919898"]  = true,
	["99135633258223"]  = true,
	["97167027849946"]  = true,
	["109230267448394"] = true,
	["139835501033932"] = true,
	["126896426760253"] = true,
}

local toggleOn = false
local strictRangeOn = false
local detectionRange = 18
local screenGui
local toggleButton
local strictButton
local rangeBox
local clickedTracks = {}
local tracksStartedInRange = {}

-- ✅ Click the Block ImageButton (mobile-safe)
local function clickBlockButton()
	local gui = localPlayer:FindFirstChild("PlayerGui")
	if not gui then return end

	local mainUI = gui:FindFirstChild("MainUI")
	local container = mainUI and mainUI:FindFirstChild("AbilityContainer")
	local blockButton = container and container:FindFirstChild("Block")

	if blockButton and blockButton:IsA("ImageButton") and blockButton.Visible then
		local success = false
		for _, conn in ipairs(getconnections(blockButton.MouseButton1Click)) do
			pcall(function()
				conn:Fire()
				success = true
			end)
		end
		if not success then
			pcall(function()
				blockButton:Activate()
			end)
		end
	end
end

-- 🔎 Detect new animations only
local function detectNewAnimations(humanoid, playerName, dist)
	for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
		local anim = track.Animation
		if anim and anim.AnimationId then
			local id = string.match(anim.AnimationId, "%d+")
			if id and animationIds[id] and not clickedTracks[track] then
				clickedTracks[track] = true
				tracksStartedInRange[track] = dist <= detectionRange
				notify(playerName .. " started animation " .. id)

				task.spawn(function()
					track.Stopped:Wait()
					clickedTracks[track] = nil
					tracksStartedInRange[track] = nil
				end)
			end
		end
	end
end

-- 🔒 Persistent toggle & range state
local function getBoolFlag(name)
	local flag = localPlayer:FindFirstChild(name)
	if not flag then
		flag = Instance.new("BoolValue")
		flag.Name = name
		flag.Value = false
		flag.Parent = localPlayer
	end
	return flag
end

local function getNumberFlag(name)
	local flag = localPlayer:FindFirstChild(name)
	if not flag then
		flag = Instance.new("NumberValue")
		flag.Name = name
		flag.Value = 18
		flag.Parent = localPlayer
	end
	return flag
end

-- 🖱️ Toggle GUI + Range Box
local function createToggleGui()
	if screenGui then screenGui:Destroy() end

	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "BlockAutoToggleGui"
	screenGui.ResetOnSpawn = true
	screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

	toggleButton = Instance.new("TextButton")
	toggleButton.Size = UDim2.new(0, 130, 0, 30)
	toggleButton.Position = UDim2.new(0, 10, 0, 10)
	toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleButton.TextColor3 = Color3.new(1, 1, 1)
	toggleButton.Parent = screenGui

	strictButton = Instance.new("TextButton")
	strictButton.Size = UDim2.new(0, 180, 0, 30)
	strictButton.Position = UDim2.new(0, 10, 0, 50)
	strictButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	strictButton.TextColor3 = Color3.new(1, 1, 1)
	strictButton.Parent = screenGui

	rangeBox = Instance.new("TextBox")
	rangeBox.Size = UDim2.new(0, 50, 0, 30)
	rangeBox.Position = UDim2.new(0, 10, 0, 90)
	rangeBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	rangeBox.TextColor3 = Color3.new(1, 1, 1)
	rangeBox.ClearTextOnFocus = false
	rangeBox.Parent = screenGui

	local toggleFlag = getBoolFlag("AutoBlockToggle")
	local strictFlag = getBoolFlag("AutoBlockStrictRange")
	local rangeFlag = getNumberFlag("AutoBlockRange")

	toggleOn = toggleFlag.Value
	strictRangeOn = strictFlag.Value
	detectionRange = rangeFlag.Value

	rangeBox.Text = tostring(detectionRange)

	local function updateButtons()
		toggleButton.Text = toggleOn and "Auto Block: ON" or "Auto Block: OFF"
		toggleButton.BackgroundColor3 = toggleOn and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(50, 50, 50)

		strictButton.Text = strictRangeOn and "Strict Range Check: ON" or "Strict Range Check: OFF"
		strictButton.BackgroundColor3 = strictRangeOn and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(50, 50, 50)
	end

	updateButtons()

	toggleButton.MouseButton1Click:Connect(function()
		toggleOn = not toggleOn
		toggleFlag.Value = toggleOn
		updateButtons()
	end)

	strictButton.MouseButton1Click:Connect(function()
		strictRangeOn = not strictRangeOn
		strictFlag.Value = strictRangeOn
		updateButtons()
	end)

	rangeBox.FocusLost:Connect(function(enterPressed)
		local num = tonumber(rangeBox.Text)
		if num then
			detectionRange = math.clamp(num, 1, 1000)
			rangeFlag.Value = detectionRange
			rangeBox.Text = tostring(detectionRange)
		else
			rangeBox.Text = tostring(detectionRange)
		end
	end)
end

-- 🔁 Recreate GUI on respawn
localPlayer.CharacterAdded:Connect(function()
	task.wait(1)
	createToggleGui()
end)

if localPlayer.Character then
	createToggleGui()
end

-- 🔄 Main loop
RunService.Heartbeat:Connect(function()
	if not toggleOn then return end

	local myChar = localPlayer.Character
	local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
	if not myRoot then return end

	for _, otherPlayer in ipairs(Players:GetPlayers()) do
		if otherPlayer ~= localPlayer and otherPlayer.Character then
			local root = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
			local humanoid = otherPlayer.Character:FindFirstChildOfClass("Humanoid")
			if root and humanoid then
				local dist = (root.Position - myRoot.Position).Magnitude
				if dist <= detectionRange then
					detectNewAnimations(humanoid, otherPlayer.Name, dist)

					for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
						if clickedTracks[track] then
							if strictRangeOn and not tracksStartedInRange[track] then
								continue
							end
							clickBlockButton()
						end
					end
				end
			end
		end
	end
end)
