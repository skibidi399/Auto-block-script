function loadRayfield()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local TweenService = game:GetService("TweenService")
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local lp = Players.LocalPlayer
    local PlayerGui = lp:WaitForChild("PlayerGui")

    local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
    local Window = Rayfield:CreateWindow({
        Name = "Auto Block Hub",
        LoadingTitle = "Auto Block Script",
        LoadingSubtitle = "by Skibidi Shots",
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "AutoBlockHub",
            FileName = "Settings"
        },
        Discord = {Enabled = false},
        KeySystem = false
    })

    local AutoBlockTab = Window:CreateTab("Auto Block", 4483362458)
    local FakeBlockTab = Window:CreateTab("Fake Block", 4483362458)
    local AutoPunchTab = Window:CreateTab("Auto Punch", 4483362458)
    local CustomAnimationsTab = Window:CreateTab("Custom Animations", 4483362458)

    local toggleOn, strictRangeOn, looseFacing = false, false, true
    local detectionRange = 18
    local autoPunchOn, flingPunchOn = false, false
    local customBlockEnabled, customPunchEnabled = false, false
    local customBlockAnimId, customPunchAnimId = "", ""
    local flingPower = 10000
    local hiddenfling = false

    AutoBlockTab:CreateToggle({Name = "Auto Block", CurrentValue = false, Callback = function(v) toggleOn = v end})
    AutoBlockTab:CreateToggle({Name = "Strict Range", CurrentValue = false, Callback = function(v) strictRangeOn = v end})
    AutoBlockTab:CreateDropdown({Name = "Facing Mode", Options = {"Loose", "Strict"}, CurrentOption = "Loose", Callback = function(opt) looseFacing = opt == "Loose" end})
    AutoBlockTab:CreateInput({Name = "Detection Range", PlaceholderText = "18", RemoveTextAfterFocusLost = false, Callback = function(text) detectionRange = tonumber(text) or detectionRange end})

    FakeBlockTab:CreateToggle({
        Name = "Load Fake Block",
        CurrentValue = false,
        Callback = function(v)
            local fakeGui = PlayerGui:FindFirstChild("FakeBlockGui")
            if v then
                if not fakeGui then
                    loadstring(game:HttpGet("https://pastebin.com/raw/ztnYv27k"))()
                else
                    fakeGui.Enabled = true
                end
            else
                if fakeGui then
                    fakeGui.Enabled = false
                end
            end
        end
    })

    AutoPunchTab:CreateToggle({Name = "Auto Punch", CurrentValue = false, Callback = function(v) autoPunchOn = v end})
    AutoPunchTab:CreateToggle({Name = "Fling Punch", CurrentValue = false, Callback = function(v) flingPunchOn = v end})
    AutoPunchTab:CreateSlider({Name = "Fling Power", Range = {5000, 50000}, Increment = 1000, CurrentValue = 10000, Callback = function(v) flingPower = v end})

    CustomAnimationsTab:CreateInput({Name = "Custom Block Animation", PlaceholderText = "AnimationId", RemoveTextAfterFocusLost = false, Callback = function(txt) customBlockAnimId = txt end})
    CustomAnimationsTab:CreateToggle({Name = "Enable Custom Block Animation", CurrentValue = false, Callback = function(v) customBlockEnabled = v end})
    CustomAnimationsTab:CreateInput({Name = "Custom Punch Animation (not for m3/m4 parry)", PlaceholderText = "AnimationId", RemoveTextAfterFocusLost = false, Callback = function(txt) customPunchAnimId = txt end})
    CustomAnimationsTab:CreateToggle({Name = "Enable Custom Punch Animation", CurrentValue = false, Callback = function(v) customPunchEnabled = v end})

    local function fireRemoteBlock()
        local args = {"UseActorAbility", "Block"}
        ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
    end

    local function isFacing(localRoot, targetRoot)
        local dirTo = (localRoot.Position - targetRoot.Position).Unit
        local facing = targetRoot.CFrame.LookVector
        return looseFacing and facing:Dot(dirTo) > -0.3 or facing:Dot(dirTo) > 0
    end

    coroutine.wrap(function()
        local hrp, c, vel, movel = nil, nil, nil, 0.1
        while true do
            RunService.Heartbeat:Wait()
            if hiddenfling then
                while hiddenfling and not (c and c.Parent and hrp and hrp.Parent) do
                    RunService.Heartbeat:Wait()
                    c = lp.Character
                    hrp = c and c:FindFirstChild("HumanoidRootPart")
                end
                if hiddenfling then
                    vel = hrp.Velocity
                    hrp.Velocity = vel * flingPower + Vector3.new(0, flingPower, 0)
                    RunService.RenderStepped:Wait()
                    if c and c.Parent and hrp and hrp.Parent then hrp.Velocity = vel end
                    RunService.Stepped:Wait()
                    if c and c.Parent and hrp and hrp.Parent then
                        hrp.Velocity = vel + Vector3.new(0, movel, 0)
                        movel = movel * -1
                    end
                end
            end
        end
    end)()

    RunService.Heartbeat:Connect(function()
        local myChar = lp.Character
        local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
        if not myRoot then return end

        if autoPunchOn then
            local gui = lp:FindFirstChild("PlayerGui")
            local punch = gui and gui:FindFirstChild("MainUI") and gui.MainUI:FindFirstChild("AbilityContainer") and gui.MainUI.AbilityContainer:FindFirstChild("Punch")
            if punch and punch:FindFirstChild("Charges") and punch.Charges.Text == "1" then
                for _, plr in ipairs(Players:GetPlayers()) do
                    if plr ~= lp and plr.Character then
                        local root = plr.Character:FindFirstChild("HumanoidRootPart")
                        if root and (root.Position - myRoot.Position).Magnitude <= 10 then
                            for _, conn in ipairs(getconnections(punch.MouseButton1Click)) do
                                pcall(function() conn:Fire() end)
                            end
                            if flingPunchOn then
                                hiddenfling = true
                                TweenService:Create(myRoot, TweenInfo.new(0.04, Enum.EasingStyle.Linear), {CFrame = root.CFrame}):Play()
                                task.delay(1.5, function() hiddenfling = false end)
                            end
                            break
                        end
                    end
                end
            end
        end
    end)

    -- Replace default anims with custom
    local lastBlockTime, lastPunchTime = 0, 0
    local blockAnimIds = {
        ["rbxassetid://72722244508749"] = true,
        ["rbxassetid://96959123077498"] = true
    }
    local punchAnimId = "rbxassetid://87259391926321"

    local function playCustomAnimation(animId)
        if not lp.Character then return end
        local hum = lp.Character:FindFirstChildOfClass("Humanoid")
        if hum and animId and animId ~= "" then
            local anim = Instance.new("Animation")
            anim.AnimationId = "rbxassetid://" .. animId
            local track = hum:LoadAnimation(anim)
            track:Play()
        end
    end

    local function hookAnimationReplacement()
        local function connect(hum)
            if not hum then return end
            hum.AnimationPlayed:Connect(function(track)
                local id = track.Animation and track.Animation.AnimationId
                local now = tick()
                if customBlockEnabled and blockAnimIds[id] and now - lastBlockTime >= 1 then
                    lastBlockTime = now
                    track:Stop()
                    playCustomAnimation(customBlockAnimId)
                end
                if customPunchEnabled and id == punchAnimId and now - lastPunchTime >= 1 then
                    lastPunchTime = now
                    track:Stop()
                    playCustomAnimation(customPunchAnimId)
                end
            end)
        end

        if lp.Character then
            connect(lp.Character:FindFirstChildOfClass("Humanoid"))
        end

        lp.CharacterAdded:Connect(function(char)
            local hum = char:WaitForChild("Humanoid")
            connect(hum)
        end)
    end

    task.delay(3, hookAnimationReplacement)
end

loadRayfield()
